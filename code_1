import sys

def escape_pdf_text(text):
    return text.replace('\\', '\\\\').replace('(', '\\(').replace(')', '\\)')

def txt_to_pdf(input_file, output_file):
    with open(input_file, 'r') as txt:
        lines = txt.readlines()

    pdf_lines = []
    pdf_lines.append("%PDF-1.1")
    pdf_lines.append("1 0 obj << /Type /Catalog /Pages 2 0 R >> endobj")
    pdf_lines.append("2 0 obj << /Type /Pages /Kids [3 0 R] /Count 1 >> endobj")

    content = "BT\n/F1 12 Tf\n72 750 Td\n"
    for i, line in enumerate(lines):
        safe_line = escape_pdf_text(line.rstrip('\n'))
        content += f"0 -14 Td ({safe_line}) Tj\n"

    content += "ET"

    pdf_lines.append("4 0 obj << /Length " + str(len(content.encode())) + " >> stream")
    pdf_lines.append(content)
    pdf_lines.append("endstream endobj")

    pdf_lines.append("""3 0 obj
<< /Type /Page /Parent 2 0 R
/MediaBox [0 0 612 792]
/Contents 4 0 R
/Resources << /Font << /F1 5 0 R >> >> >> endobj""")

    pdf_lines.append("5 0 obj << /Type /Font /Subtype /Type1 /BaseFont /Courier >> endobj")

    # Collect all object byte offsets
    xref = []
    offset = 0
    pdf_bytes = b''
    for line in pdf_lines:
        encoded = (line + '\n').encode('latin1')
        xref.append(offset)
        pdf_bytes += encoded
        offset += len(encoded)

    xref_start = offset
    pdf_bytes += f"xref\n0 {len(xref)+1}\n0000000000 65535 f \n".encode()
    for o in xref:
        pdf_bytes += f"{o:010d} 00000 n \n".encode()

    pdf_bytes += b"trailer\n<< /Size %d /Root 1 0 R >>\n" % (len(xref)+1)
    pdf_bytes += b"startxref\n%d\n%%EOF\n" % xref_start

    with open(output_file, 'wb') as out_pdf:
        out_pdf.write(pdf_bytes)

    print(f"âœ… PDF created: {output_file}")

# Usage: python script.py input.txt output.pdf
if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python txt_to_pdf.py input.txt output.pdf")
    else:
        txt_to_pdf(sys.argv[1], sys.argv[2])
