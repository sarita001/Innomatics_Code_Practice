import sys
from fpdf import FPDF
from PyPDF2 import PdfMerger
import os

def create_pdf(input_file, output_pdf='output.pdf', template_pdf=None):
    pdf = FPDF()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()

    # Use monospaced font
    pdf.set_font("Courier", size=10)

    # Set line height
    line_height = 5
    page_width = pdf.w - 2 * pdf.l_margin
    max_chars = int(page_width / pdf.get_string_width('A'))

    with open(input_file, 'r') as file:
        for line in file:
            line = line.rstrip('\n')
            while len(line) > 0:
                part = line[:max_chars]
                pdf.cell(0, line_height, part, ln=True)
                line = line[max_chars:]

    pdf.output(output_pdf)
    print(f"PDF saved as: {output_pdf}")

    # Optional: Merge with template if provided
    if template_pdf and os.path.exists(template_pdf):
        merged_pdf = 'merged_' + output_pdf
        merger = PdfMerger()
        merger.append(template_pdf)
        merger.append(output_pdf)
        merger.write(merged_pdf)
        merger.close()
        print(f"Merged PDF saved as: {merged_pdf}")
    elif template_pdf:
        print(f"Template PDF '{template_pdf}' not found. Skipping merge.")

# Entry point
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python txt_to_pdf.py <input.txt> [output.pdf] [template.pdf]")
        sys.exit(1)

    input_txt = sys.argv[1]
    output_pdf = sys.argv[2] if len(sys.argv) >= 3 else 'output.pdf'
    template_pdf = sys.argv[3] if len(sys.argv) >= 4 else None

    create_pdf(input_txt, output_pdf, template_pdf)
